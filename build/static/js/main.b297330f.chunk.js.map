{"version":3,"sources":["Config.ts","provenance/utils.ts","provenance/Provenance.ts","provenance/ProvenanceGraph.tsx","App.tsx","index.tsx"],"names":["scopes","workspaceId","reportId","captureBookmark","report","a","bookmarksManager","capture","console","log","undefined","bookmark","applyState","setupProvenance","defaultState","provenance","initProvenance","addGlobalObserver","applyBookmark","getState","current","done","provDiv","document","getElementById","ProvVisCreator","id","goToNode","provVisUpdate","actions","event","vectorChange","label","apply","state","Array","from","entries","forEach","key","value","featureVector","stateSaveMode","actionType","eventType","meta","ProvenanceGraph","prevChange","models","React","useRef","Map","useState","setDefaultState","useEffect","on","Month","FPDesc","Region","Ethnicity","changeEvent","detail","dataPoints","length","identity","i","set","target","column","equals","size","keys","k","capturedBookmark","slice","style","width","reportContainer","powerbi","service","Service","factories","hpmFactory","wpmpFactory","routerFactory","accessToken","embedUrl","App","props","myReport","error","reportRef","createRef","this","renderMyReport","display","ref","flexDirection","flex","authenticate","textContent","line","appendChild","createTextNode","createElement","embedConfiguration","type","tokenType","TokenType","Aad","permissions","Permissions","All","config","settings","visualRenderedEvents","panes","filters","visible","pageNavigation","embed","off","errorMsg","reset","thisObj","msalConfig","auth","clientId","loginRequest","msalInstance","UserAgentApplication","handleRedirectCallback","response","setUsername","account","name","getembedUrl","setState","getAccount","acquireTokenSilent","then","catch","err","acquireTokenRedirect","toString","loginRedirect","fetch","headers","method","errorMessage","push","get","json","body","ok","status","code","username","welcome","innerText","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.b297330f.chunk.js","sourcesContent":["// ----------------------------------------------------------------------------\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n// ----------------------------------------------------------------------------\n\n/* eslint-disable @typescript-eslint/no-inferrable-types */\n\n// Scope of AAD app. Use the below configuration to use all the permissions provided in the AAD app through Azure portal.\n// Refer https://aka.ms/PowerBIPermissions for complete list of Power BI scopes\n// https://analysis.windows.net/powerbi/api/Report.Read.All\nexport const scopes: string[] = [\"https://analysis.windows.net/powerbi/api/Report.Read.All\"];\n\n// Client Id (Application Id) of the AAD app.\nexport const clientId: string = \"8907c50f-2760-4f23-8310-0dd4b59a3d4e\";\n\n// Id of the workspace where the report is hosted\nexport const workspaceId: string = \"b4d89c91-9284-45e7-92e1-3fd0f59cf20f\";\n\n// Id of the report to be embedded\nexport const reportId: string = \"44d6556a-c8ca-451c-9f24-51ebfd04ab69\";","import { Report } from \"report\";\nimport { IReportBookmark } from \"powerbi-models\";\n\nexport async function captureBookmark(report: Report): Promise<IReportBookmark | undefined> {\n\ttry {\n\t\treturn await report.bookmarksManager.capture();\n\t}\n\tcatch (error) {\n\t\tconsole.log(error);\n\t}\n\treturn undefined;\n}\n\nexport async function applyBookmark(bookmark: string, report: Report): Promise<void> {\n\ttry {\n\t\tawait report.bookmarksManager.applyState(bookmark);\n\t}\n\tcatch (error) {\n\t\tconsole.log(error);\n\t}\n}\n","import { Provenance, NodeID, initProvenance } from '@visdesignlab/trrack';\nimport { ProvVisCreator } from '@visdesignlab/trrack-vis';\nimport { Report } from 'powerbi-client';\nimport { IApplicationState } from './interfaces';\nimport { applyBookmark } from './utils';\nimport { ActionReturnType } from '@visdesignlab/trrack/dist/Types/Action';\n\nexport interface IAction {\n  event: (bookmark: string, changeEvent: Map<string, string>, label: string) => void;\n}\n\ninterface IAppProvenance {\n  provenance: Provenance<IApplicationState, string, unknown>;\n  actions: IAction;\n}\n\nexport function setupProvenance(report: Report, defaultState: IApplicationState): IAppProvenance {\n  const provenance: Provenance<IApplicationState, string, unknown> = initProvenance<IApplicationState, string, unknown>(defaultState);\n  provenance.addGlobalObserver(() => {\n    applyBookmark(provenance.getState(provenance.current).bookmark, report);\n  });\n\n  provenance.done();\n\n  const event = (bookmark: string, vectorChange: Map<string, string>, label: string) => { // TODO: Typing of vectorChange\n    provenance.apply({\n      apply: (state: IApplicationState) => {\n        state.bookmark = bookmark;\n        Array.from(vectorChange.entries())?.forEach(([key, value]) => state.featureVector[key] = value);\n        return {\n          state,\n          label: `Click on ${label}`,\n          stateSaveMode: 'Complete',\n          actionType: 'Regular',\n          eventType: '', // TODO: changes here because graph = string\n          meta: {}\n        } as ActionReturnType<IApplicationState, string>;\n      }\n    }, `Click on ${label}`);\n  }\n\n  const provVisUpdate = () => {\n    const provDiv = document.getElementById(\"provDiv\");\n    if (provDiv) {\n      ProvVisCreator(\n        provDiv!,\n        provenance,\n        (id: NodeID) => provenance.goToNode(id),\n        true, false, undefined);\n    }\n  }\n\n  provVisUpdate();\n\n  return {\n    provenance,\n    actions: {\n      event\n    },\n  };\n}\n","import React from \"react\";\nimport { Report } from \"report\";\nimport { setupProvenance } from \"./Provenance\";\nimport { captureBookmark } from \"./utils\";\nimport { IApplicationState } from \"./interfaces\";\n\nexport function ProvenanceGraph({ report, models }: { report: Report, models: any }) {\n  const prevChange = React.useRef<Map<string, string>>(new Map());\n  const [defaultState, setDefaultState] = React.useState<IApplicationState | null>(null);\n\n  React.useEffect(() => {\n    // bookmarks can only be captured, when reports are loaded\n    report.on(\"loaded\", async () => {\n      const bookmark = await captureBookmark(report);\n      setDefaultState({\n        featureVector: {\n          Month: '',\n          FPDesc: '',\n          Region: '',\n          Ethnicity: ''\n        },\n        bookmark: bookmark?.state || '',\n      })\n    });\n  // report object stays the same throught the work process - a rerender doesn't change the object\n  }, [report]);\n\n  React.useEffect(() => {\n    if (defaultState) {\n      const actions = setupProvenance(report, defaultState).actions;\n  \n      report.on(\"dataSelected\", async (event: any) => {\n        const changeEvent: { identity: { target: { column: string, table: string }, equals: string }[] }[] = event.detail.dataPoints;\n        const vectorChange = new Map<string, string>();\n        let label = '';\n  \n        if (changeEvent.length > 0) {\n          changeEvent[0].identity.forEach((i) => {\n            vectorChange.set(i.target.column, i.equals);\n            label += i.target.column + ' ';\n          });\n        } else if (prevChange.current.size > 0) {\n          Array.from(prevChange.current.keys()).forEach((k) => {\n            vectorChange.set(k, '');\n            label += k + ' ';\n          });\n        } else {\n          label += 'none ';\n        }\n        prevChange.current = vectorChange;\n        console.log('Data Selected', event.detail);\n        const capturedBookmark = await captureBookmark(report);\n        if (capturedBookmark) {\n          actions.event(capturedBookmark.state as string, vectorChange, label.slice(0, -1));\n        }\n      });\n    }\n  }, [report, prevChange, defaultState]);\n\n  return <>\n    <div id=\"provDiv\" style={{ width: 300 }} />\n    {/* <button onClick={async () => {\n      try {\n        const pages = await report.getPages();\n\n        // Retrieve the page that contain the visual. For the sample report it will be the active page\n        let page = pages.filter(function (page) {\n          return page.isActive\n        })[0];\n\n        const visuals = await page.getVisuals();\n\n        // Retrieve the target visual.\n        let visual = visuals.filter(function (visual) {\n          return visual.name === \"VisualContainer2\";\n        })[0];\n\n        const result = await visual.exportData(models.ExportDataType.Summarized);\n        console.log(result.data);\n      }\n      catch (errors) {\n        console.log(errors);\n      }\n    }}>summarzied</button>\n    <button onClick={async () => {\n      // Retrieve the page collection and get the visuals for the active page.\n      try {\n        const pages = await report.getPages();\n\n        // Retrieve the page that contain the visual. For the sample report it will be the active page\n        let page = pages.filter(function (page) {\n          return page.isActive\n        })[0];\n\n        const visuals = await page.getVisuals();\n\n        // Retrieve the target visual.\n        let visual = visuals.filter(function (visual) {\n          return visual.name === \"VisualContainer2\";\n        })[0];\n\n        // Exports visual data\n        const result = await visual.exportData(models.ExportDataType.Underlying);\n        console.log(result.data);\n      }\n      catch (errors) {\n        console.log(errors);\n      }\n\n    }}></button> */}\n  </>;\n}","// ----------------------------------------------------------------------------\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n// ----------------------------------------------------------------------------\n\nimport React, { RefObject } from \"react\";\nimport { UserAgentApplication, AuthError, AuthResponse } from \"msal\";\nimport { service, factories, models, IEmbedConfiguration, Report } from \"powerbi-client\";\nimport \"./App.css\";\nimport * as config from \"./Config\";\nimport { ProvenanceGraph } from \"./provenance/ProvenanceGraph\";\nconst powerbi = new service.Service(factories.hpmFactory, factories.wpmpFactory, factories.routerFactory);\n\nlet accessToken = \"\";\nlet embedUrl = \"\";\nlet reportContainer: HTMLElement;\n// let reportRef: React.Ref<HTMLDivElement>;\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface AppProps { };\ninterface AppState { accessToken: string; embedUrl: string; error: string[]; reportRef: RefObject<any> };\n\nclass App extends React.Component<AppProps, AppState> {\n\tprivate myReport: any | Report;\n\n\tconstructor(props: AppProps) {\n\t\tsuper(props);\n\t\tthis.state = { accessToken: \"\", embedUrl: \"\", error: [], reportRef: React.createRef() };\n\t\tthis.myReport = null;\n\t}\n\n\t// React function\n\trender(): JSX.Element {\n\t\tthis.myReport = this.renderMyReport();\n\n\t\treturn (<>\n\t\t\t<div style={{ display: 'flex' }}>\n\t\t\t\t\t<div id=\"reportContainer\" ref={this.state.reportRef} style={{ display: 'flex', flexDirection: 'column', flex: 1 }} >\n\t\t\t\t\t\tLoading the report...\n\t\t\t\t\t</div>\n\t\t\t\t{/* ProvenanceGraph only works, when there is a report */}\n\t\t\t\t{this.myReport ? <ProvenanceGraph report={this.myReport} models={models} /> : null} \n\t\t\t</div>\n\t\t</>)\n\t\t\t;\n\t}\n\n\t// React function\n\tasync componentDidMount(): Promise<void> {\n\n\t\tif (this.state.reportRef !== null) {\n\t\t\treportContainer = this.state.reportRef[\"current\"];\n\t\t}\n\n\t\t// User input - null check\n\t\tif (config.workspaceId === \"\" || config.reportId === \"\") {\n\t\t\tthis.setState({ error: [\"Please assign values to workspace Id and report Id in Config.ts file\"] })\n\t\t} else {\n\n\t\t\t// Authenticate the user and generate the access token\n\t\t\tthis.authenticate();\n\t\t}\n\t}\n\n\trenderMyReport(): Report {\n\n\t\tlet report: any | Report = null;\n\n\t\tif (this.state.error.length) {\n\t\t\t// Cleaning the report container contents and rendering the error message in multiple lines\n\t\t\treportContainer.textContent = \"\";\n\t\t\tthis.state.error.forEach(line => {\n\t\t\t\treportContainer.appendChild(document.createTextNode(line));\n\t\t\t\treportContainer.appendChild(document.createElement(\"br\"));\n\t\t\t});\n\t\t\tconsole.log('Error', this.state.error);\n\t\t} else if (this.state.accessToken !== \"\" && this.state.embedUrl !== \"\") { // comment this condition\n\n\t\t\tconst embedConfiguration: IEmbedConfiguration = {\n\t\t\t\ttype: \"report\",\n\t\t\t\ttokenType: models.TokenType.Aad,\n\t\t\t\taccessToken,\n\t\t\t\tembedUrl,\n\t\t\t\tpermissions: models.Permissions.All,\n\t\t\t\tid: config.reportId,\n\t\t\t\tsettings: {\n\t\t\t\t\tvisualRenderedEvents: true,\n\t\t\t\t\tpanes: {\n\t\t\t\t\t\tfilters: {\n\t\t\t\t\t\t\tvisible: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\tpageNavigation: {\n\t\t\t\t\t\t\tvisible: true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\treport = powerbi.embed(reportContainer, embedConfiguration) as Report;\n\n\n\t\t\t// Clear any other loaded handler events\n\t\t\treport.off(\"loaded\");\n\n\t\t\t// Triggers when a content schema is successfully loaded\n\t\t\treport.on(\"loaded\", function () {\n\t\t\t\tconsole.log(\"Report load successful\");\n\n\t\t\t});\n\n\t\t\t// Clear any other rendered handler events\n\t\t\treport.off(\"rendered\");\n\t\t\t\n\t\t\t// Triggers when a content is successfully embedded in UI\n\t\t\treport.on(\"rendered\", function () {\n\t\t\t\tconsole.log(\"Report render successful\");\n\t\t\t});\n\n\t\t\t// Clear any other error handler event\n\t\t\treport.off(\"error\");\n\n\t\t\t// Below patch of code is for handling errors that occur during embedding\n\t\t\treport.on(\"error\", function (event: any) {\n\t\t\t\tconst errorMsg = event.detail;\n\n\t\t\t\t// Use errorMsg variable to log error in any destination of choice\n\t\t\t\tconsole.error(errorMsg);\n\t\t\t});\n\t\t}\n\n\t\treturn report;\n\t}\n\n\t// React function\n\tcomponentWillUnmount(): void {\n\t\tpowerbi.reset(reportContainer);\n\t}\n\n\t// Authenticating to get the access token\n\tauthenticate(): void {\n\t\tconst thisObj = this;\n\n\t\tconst msalConfig = {\n\t\t\tauth: {\n\t\t\t\tclientId: config.clientId\n\t\t\t}\n\t\t};\n\n\t\tconst loginRequest = {\n\t\t\tscopes: config.scopes\n\t\t};\n\n\t\tconst msalInstance: UserAgentApplication = new UserAgentApplication(msalConfig);\n\n\t\tfunction successCallback(response: AuthResponse): void {\n\n\t\t\tif (response.tokenType === \"id_token\") {\n\t\t\t\tthisObj.authenticate();\n\n\t\t\t} else if (response.tokenType === \"access_token\") {\n\n\t\t\t\taccessToken = response.accessToken;\n\t\t\t\tthisObj.setUsername(response.account.name);\n\t\t\t\tthisObj.getembedUrl();\n\n\t\t\t} else {\n\n\t\t\t\tthisObj.setState({ error: [(\"Token type is: \" + response.tokenType)] });\n\t\t\t}\n\t\t}\n\n\t\tfunction failCallBack(error: AuthError): void {\n\n\t\t\tthisObj.setState({ error: [\"Redirect error: \" + error] });\n\t\t}\n\n\t\tmsalInstance.handleRedirectCallback(successCallback, failCallBack);\n\n\t\t// check if there is a cached user\n\t\tif (msalInstance.getAccount()) {\n\n\t\t\t// get access token silently from cached id-token\n\t\t\tmsalInstance.acquireTokenSilent(loginRequest)\n\t\t\t\t.then((response: AuthResponse) => {\n\n\t\t\t\t\t// get access token from response: response.accessToken\n\t\t\t\t\taccessToken = response.accessToken;\n\t\t\t\t\tthis.setUsername(response.account.name);\n\t\t\t\t\tthis.getembedUrl();\n\t\t\t\t})\n\t\t\t\t.catch((err: AuthError) => {\n\n\t\t\t\t\t// refresh access token silently from cached id-token\n\t\t\t\t\t// makes the call to handleredirectcallback\n\t\t\t\t\tif (err.name === \"InteractionRequiredAuthError\") {\n\t\t\t\t\t\tmsalInstance.acquireTokenRedirect(loginRequest);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthisObj.setState({ error: [err.toString()] })\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t} else {\n\n\t\t\t// user is not logged in or cached, you will need to log them in to acquire a token\n\t\t\tmsalInstance.loginRedirect(loginRequest);\n\t\t}\n\t}\n\n\t// Power BI REST API call to get the embed URL of the report\n\tgetembedUrl(): void {\n\t\tconst thisObj: this = this;\n\n\t\tfetch(\"https://api.powerbi.com/v1.0/myorg/groups/\" + config.workspaceId + \"/reports/\" + config.reportId, {\n\t\t\theaders: {\n\t\t\t\t\"Authorization\": \"Bearer \" + accessToken\n\t\t\t},\n\t\t\tmethod: \"GET\"\n\t\t})\n\t\t\t.then(function (response) {\n\t\t\t\tconst errorMessage: string[] = [];\n\t\t\t\terrorMessage.push(\"Error occurred while fetching the embed URL of the report\")\n\t\t\t\terrorMessage.push(\"Request Id: \" + response.headers.get(\"requestId\"));\n\n\t\t\t\tresponse.json()\n\t\t\t\t\t.then(function (body) {\n\t\t\t\t\t\t// Successful response\n\t\t\t\t\t\tif (response.ok) {\n\t\t\t\t\t\t\tembedUrl = body[\"embedUrl\"];\n\t\t\t\t\t\t\tthisObj.setState({ accessToken: accessToken, embedUrl: embedUrl });\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// If error message is available\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\terrorMessage.push(\"Error \" + response.status + \": \" + body.error.code);\n\n\t\t\t\t\t\t\tthisObj.setState({ error: errorMessage });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t})\n\t\t\t\t\t.catch(function () {\n\t\t\t\t\t\terrorMessage.push(\"Error \" + response.status + \":  An error has occurred\");\n\n\t\t\t\t\t\tthisObj.setState({ error: errorMessage });\n\t\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(function (error) {\n\n\t\t\t\t// Error in making the API call\n\t\t\t\tthisObj.setState({ error: error });\n\t\t\t})\n\t}\n\n\t// Show username in the UI\n\tsetUsername(username: string): void {\n\t\tconst welcome = document.getElementById(\"welcome\");\n\t\tif (welcome !== null)\n\t\t\twelcome.innerText = \"Welcome, \" + username;\n\t}\n}\n\nexport default App;","// ----------------------------------------------------------------------------\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n// ----------------------------------------------------------------------------\n\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport 'semantic-ui-css/semantic.min.css'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}