{"version":3,"sources":["utils/NewHiresDashboardOnboarding.png","power-bi/Config.ts","utils/RadioButton.tsx","survey/pages/DemographicsPage.tsx","utils/MailLink.tsx","survey/pages/DataProtectionPage.tsx","utils/utils.ts","survey/pages/UploadPage.tsx","provenance/Provenance.ts","provenance/Provectories.ts","power-bi/ProvectoriesDashboard.tsx","survey/pages/QuestionPage.tsx","survey/pages/UsabilityEvaluationPage.tsx","utils/constants.tsx","survey/pages/ProcedurePage.tsx","survey/pages/OnboardingPage.tsx","survey/Survey.tsx","survey/WelcomeView.tsx","App.tsx","index.tsx"],"names":["module","exports","scopes","clientId","workspaceId","reportId","RadioButton","htmlFor","value","title","selected","setSelected","type","className","onChange","name","String","id","autoComplete","checked","DemographicsPage","age","gender","dashboardExperience","poweBIExperience","confidence","setAge","setGender","setDashboardExperience","setPowerBIExperience","setConfidence","setShowNextButton","React","useEffect","length","min","max","e","target","valueAsNumber","role","aria-label","map","gen","key","label","val","num","MailLink","mail","href","DataProtectionPage","showMore","setShowMore","confirmed","setConfirmed","onClick","exportData","visual","a","tries","result","models","ExportDataType","Summarized","console","error","toCamelCaseString","split","t","i","toUpperCase","slice","join","getVisualAttributeMapper","mapper","getCapabilities","capabilities","dataRoles","Promise","all","getDataFields","dataFields","d","idx","getDataFieldDisplayName","attribute","getCurrentVisuals","report","getPages","then","pages","filter","page","isActive","getVisuals","visuals","v","appStateToFeatureVector","currState","rootState","featureVector","selectedColumns","Set","filteredColumns","Object","keys","forEach","vKey","visState","rootVisState","categoryMapper","aKey","rootAttribute","currAttribute","columnTitle","vector","push","root","includes","add","selectedValues","Array","from","filteredValues","UploadPage","questionProvanencesRef","powerBIExperience","satisfaction","user","useState","downloaded","setDownloaded","uploadClicked","setUploadClicked","getCsvString","csvCols","current","y","addCols","reduce","obj","vectors","provenance","graph","featureVectors","nodes","currNode","currVector","getState","newRow","metadata","createdOn","values","featureVectorizeGraph","j","csvRows","exportFeatureVectorRows","csvString","row","cell","newString","JSON","stringify","replaceAll","featureVectorsToCsvString","uri","encodeURI","anchor","document","createElement","style","display","download","click","window","open","remove","downloadGraphAsFeatVecCsv","rel","setupProvenance","defaultState","initProvenance","done","event","onDashboardClick","newState","apply","state","stateSaveMode","actionType","eventType","meta","actions","setProvenance","newProvenance","Provectories","appState","this","init","dataPoints","detail","visDesc","selections","point","identity","column","equals","exportedData","data","groupedData","header","index","currSet","number","match","parseInt","currArr","getSlicerState","slicerState","filters","vals","initAppState","setVisState","getActivePage","activePage","on","setVisSelected","parse","log","powerbi","service","Service","factories","hpmFactory","wpmpFactory","routerFactory","ProvectoriesDashboard","questionId","reportRef","embedUrl","accessTokenRef","reportContainerRef","renderMyReport","embedConfiguration","tokenType","TokenType","Aad","accessToken","permissions","Permissions","All","config","settings","visualRenderedEvents","panes","visible","pageNavigation","embed","off","provectories","errorMsg","Error","textContent","line","appendChild","createTextNode","container","reset","ref","height","QuestionPage","currentQuestion","setCurrentQuestion","reportLoaded","setReportLoaded","selectedAnswers","setSelectedAnswers","answerPossibilities","prev","selectedAnswer","question","newVal","prevState","p","disabled","answer","every","mentalEffort","UsabilityEvaluationPage","setSatisfaction","month","randomEvaluationQuestions","taskId","correctAnswer","numeric","year","lastEvaluationQuestions","region","EVALUATION_QUESTIONS","sort","b","Math","random","ProcedurePage","OnboardingPage","width","alt","src","Onboarding","USER","uuid","Survey","setError","setEmbedUrl","pageNumber","setPageNumber","showNextButton","disableNextButton","setDisableNExtButton","questionNumber","onNextPageButtonClick","resolve","setTimeout","_","omit","cloneDeep","endtime","Date","getTime","currentPage","getembedUrl","fetch","headers","method","response","errorMessage","get","json","body","ok","status","code","catch","authenticate","msalConfig","auth","loginRequest","msalInstance","UserAgentApplication","handleRedirectCallback","getAccount","acquireTokenSilent","err","acquireTokenRedirect","toString","loginRedirect","WelcomeView","setSurveyView","App","suveryView","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c4b613de.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/NewHiresDashboardOnboarding.49a240a8.png\";","// ----------------------------------------------------------------------------\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n// ----------------------------------------------------------------------------\n\n/* eslint-disable @typescript-eslint/no-inferrable-types */\n\n// Scope of AAD app. Use the below configuration to use all the permissions provided in the AAD app through Azure portal.\n// Refer https://aka.ms/PowerBIPermissions for complete list of Power BI scopes\n// https://analysis.windows.net/powerbi/api/Report.Read.All\nexport const scopes: string[] = [\"https://analysis.windows.net/powerbi/api/Report.Read.All\"];\n\n// Client Id (Application Id) of the AAD app.\nexport const clientId: string = \"09a6221d-50da-49bf-bbf5-6d99cdbb891e\";\n\n// Id of the workspace where the report is hosted\nexport const workspaceId: string = \"0223b04f-f0a4-43c6-9dbe-e152236e6a5a\";\n\n// Id of the report to be embedded\nexport const reportId: string = \"7c8477cc-60dc-4edf-a9f0-71b6f1b575da\";","import * as React from \"react\";\n\nexport function RadioButton<T>({ htmlFor, value, title, selected, setSelected }: { htmlFor: string, value: T, title: string, selected: T, setSelected: (selected: T) => void }) {\n\treturn <>\n\t\t<input\n\t\t\ttype=\"radio\"\n\t\t\tclassName=\"btn-check\"\n\t\t\tonChange={() => setSelected(value)}\n\t\t\tname={String(htmlFor)}\n\t\t\tid={String(htmlFor)}\n\t\t\tautoComplete=\"off\"\n\t\t\tchecked={selected === value}\n\t\t/>\n\t\t<label className=\"btn btn-outline-secondary\" htmlFor={String(htmlFor)}>{title}</label>\n\t</>;\n}","import React from \"react\";\nimport { RadioButton } from \"../../utils/RadioButton\";\n\nexport function DemographicsPage({\n\tage,\n\tgender,\n\tdashboardExperience,\n\tpoweBIExperience,\n\tconfidence,\n\tsetAge,\n\tsetGender,\n\tsetDashboardExperience,\n\tsetPowerBIExperience,\n\tsetConfidence,\n\tsetShowNextButton\n}: {\n\tage: number;\n\tgender: string;\n\tdashboardExperience: number;\n\tpoweBIExperience: number;\n\tconfidence: number;\n\tsetAge: (age: number) => void;\n\tsetGender: (gender: string) => void;\n\tsetDashboardExperience: (dashboardExperience: number) => void;\n\tsetPowerBIExperience: (powerBIExperience: number) => void;\n\tsetConfidence: (confidence: number) => void;\n\tsetShowNextButton: (showNextButton: boolean) => void;\n}) {\n\n\tReact.useEffect(() => {\n\t\tif (gender.length > 0 && age > 0 && ((confidence !== -1 && dashboardExperience === 1 && poweBIExperience !== -1) || (dashboardExperience === 0))) {\n\t\t\tsetShowNextButton(true);\n\t\t} else {\n\t\t\tsetShowNextButton(false);\n\t\t}\n\t\tif (dashboardExperience === 0) {\n\t\t\tsetConfidence(-1);\n\t\t\tsetPowerBIExperience(-1);\n\t\t}\n\t}, [\n\t\tgender,\n\t\tage,\n\t\tconfidence,\n\t\tdashboardExperience,\n\t\tpoweBIExperience,\n\t\tsetConfidence,\n\t\tsetShowNextButton,\n\t\tsetPowerBIExperience\n\t]);\n\n\treturn <div>\n\t\t<h2 className=\"mb-4\">Demographic Information</h2>\n\t\t<div className=\"row my-3\">\n\t\t\t<div className=\"col-8 d-flex align-items-center\"><h5>Please indicate your age</h5></div>\n\t\t\t<div className=\"col-4\"><input type=\"number\" min=\"0\" max=\"100\" className=\"form-control\" value={age} onChange={(e) => setAge(e.target.valueAsNumber)} /></div>\n\t\t</div>\n\t\t<div className=\"row my-3\">\n\t\t\t<div className=\"col-8 d-flex align-items-center\"><h5>Please indicate your gender</h5></div>\n\t\t\t<div className=\"col-4\">\n\t\t\t\t<div className=\"btn-group w-100\" role=\"group\" aria-label=\"gender-radio-button-group\">\n\t\t\t\t\t{(['m', 'f', 'd'])\n\t\t\t\t\t\t.map((gen) => <RadioButton<string>\n\t\t\t\t\t\t\tkey={`gender-radio-button-${gen}`}\n\t\t\t\t\t\t\thtmlFor={`gender-radio-button-${gen}`}\n\t\t\t\t\t\t\tvalue={gen}\n\t\t\t\t\t\t\ttitle={gen}\n\t\t\t\t\t\t\tselected={gender}\n\t\t\t\t\t\t\tsetSelected={setGender}\n\t\t\t\t\t\t/>)\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div className=\"row my-3\">\n\t\t\t<div className=\"col-8 d-flex align-items-center\"><h5>Do you already have experience with Dashboards/Interactive Visual Analytics Tools?</h5></div>\n\t\t\t<div className=\"col-4\">\n\t\t\t\t<div className=\"btn-group w-100\" role=\"group\" aria-label=\"dashboard-experience-radio-button-group\">\n\t\t\t\t\t{[{ label: 'Yes', value: 1 }, { label: 'No', value: 0 }]\n\t\t\t\t\t\t.map((val) => <RadioButton<number>\n\t\t\t\t\t\t\tkey={`dashboard-experience-radio-button-${val.label}`}\n\t\t\t\t\t\t\thtmlFor={`dashboard-experience-radio-button-${val.label}`}\n\t\t\t\t\t\t\tvalue={val.value}\n\t\t\t\t\t\t\ttitle={val.label}\n\t\t\t\t\t\t\tselected={dashboardExperience}\n\t\t\t\t\t\t\tsetSelected={setDashboardExperience}\n\t\t\t\t\t\t/>)\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t{dashboardExperience === 1 ? <>\n\t\t\t<div className=\"row my-3\">\n\t\t\t\t<div className=\"col-8 d-flex align-items-center\"><h5>Do you already have experience with Power BI Dashboards?</h5></div>\n\t\t\t\t<div className=\"col-4\">\n\t\t\t\t\t<div className=\"btn-group w-100\" role=\"group\" aria-label=\"powerBi-experience-radio-button-group\">\n\t\t\t\t\t\t{[{ label: 'Yes', value: 1 }, { label: 'No', value: 0 }]\n\t\t\t\t\t\t\t.map((val) => <RadioButton<number>\n\t\t\t\t\t\t\t\tkey={`powerBi-experience-radio-button-${val.label}`}\n\t\t\t\t\t\t\t\thtmlFor={`powerBi-experience-radio-button-${val.label}`}\n\t\t\t\t\t\t\t\tvalue={val.value}\n\t\t\t\t\t\t\t\ttitle={val.label}\n\t\t\t\t\t\t\t\tselected={poweBIExperience}\n\t\t\t\t\t\t\t\tsetSelected={setPowerBIExperience}\n\t\t\t\t\t\t\t/>)\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"row my-3\">\n\t\t\t\t<div className=\"col-8 d-flex align-items-center\"><h5>How would you rate your confidence in using Dashboards/Interactive Visual Analytics Tools?</h5></div>\n\t\t\t\t<div className=\"col-4\">\n\t\t\t\t\t<div className=\"btn-group w-100\" role=\"group\" aria-label=\"confidence-radio-button-group\">\n\t\t\t\t\t\t{[1, 2, 3, 4, 5, 6]\n\t\t\t\t\t\t\t.map((num) => <RadioButton<number>\n\t\t\t\t\t\t\t\tkey={`confidence-radio-button-${num}`}\n\t\t\t\t\t\t\t\thtmlFor={`confidence-radio-button-${num}`}\n\t\t\t\t\t\t\t\tvalue={num}\n\t\t\t\t\t\t\t\ttitle={String(num)}\n\t\t\t\t\t\t\t\tselected={confidence}\n\t\t\t\t\t\t\t\tsetSelected={setConfidence}\n\t\t\t\t\t\t\t/>)\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"d-flex justify-content-between text-muted\">\n\t\t\t\t\t\t<i>1 - very low confidence</i><i>6 - very high confidence</i>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</> : null}\n\t</div>\n}\n","import React from \"react\";\n\nexport function MailLink({ mail }: { mail: string }) {\n    return <a className=\"link-primary\" href={`mailto:${mail}`}>{mail}</a>\n}","import * as React from 'react';\nimport { MailLink } from '../../utils/MailLink';\n\nexport function DataProtectionPage({\n\tsetShowNextButton\n}: {\n\tsetShowNextButton: (showNextButton: boolean) => void;\n}) {\n\tconst [showMore, setShowMore] = React.useState<boolean>(false);\n\tconst [confirmed, setConfirmed] = React.useState<boolean>(false);\n\n\treturn <div>\n\t\t<h2>Data Protection</h2>\n\t\t<b>\n\t\t\tWhy do we collect and process your data?\n\t\t</b>\n\t\t<p>\n\t\t\tThe study is a purely scientific study conducted by the Institute of Business Informatics - Software Engineering\n\t\t\tand the Institute for Computer Graphics at the Johannes Kepler University Linz. In this survey no sensitive personal\n\t\t\tdata will be collected. The generated data will be used primarily to generate scientific insights. Any publication\n\t\t\tof the data will be in fully anonymous form.\n\t\t</p>\n\t\t<p>\n\t\t\tParticipation in the study is entirely voluntary. You may withdraw your consent to participate at any\n\t\t\ttime and without giving any reason, without incurring any disadvantages.\n\t\t</p>\n\t\t<p>\n\t\t\tWith the declaration of participation below, you confirm that you have read the subject information and\n\t\t\tdata protection information and that you have understood the aim, procedure and implementation of the study,\n\t\t\tas well as the data protection regulations. In addition, by confirming the declaration of participation below,\n\t\t\tyou voluntarily agree to participate in the study and confirm that you are over 18 years of age.\n\t\t</p>\n\t\t<b>How can you contact us?</b>\n\t\t<p>\n\t\t\tThe responsible party for the procesing of the data described below within the meaning of Art 4 No. 7 GDPR is\n\t\t\tJohannes Kepler University Linz (JKU), Altenberger Straße 69, 4040 Linz, <MailLink mail={'datenschutz@jku.at'} />.\n\t\t\tIf you have any questions about the study, please contact Thomas-Johann Schachinger, Johannes Kepler University Linz,\n\t\t\tAltenberger Straße 69, 4040 Linz, <MailLink mail={'thomas.schachinger@icloud.com'} /> or{' '}\n\t\t\t<MailLink mail={'cg@jku.at'} />.\n\t\t</p>\n\t\t<p>\n\t\t\tIf you would like more information about the processing of your personal data,{' '}\n\t\t\t<button\n\t\t\t\tclassName=\" btn btn-link pb-1 p-0 text-decoration-none\"\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => setShowMore(true)}\n\t\t\t>\n\t\t\t\tplease click here\n\t\t\t</button>.\n\t\t</p>\n\n\t\t<div className=\"form-check mt-4 mb-5 ms-1\">\n\t\t\t<input\n\t\t\t\tclassName=\"form-check-input\"\n\t\t\t\ttype=\"checkbox\"\n\t\t\t\tid=\"flexCheckChecked\"\n\t\t\t\tchecked={confirmed}\n\t\t\t\tonChange={(e) => {\n\t\t\t\t\tsetConfirmed(e.target.checked);\n\t\t\t\t\tsetShowNextButton(true);\n\t\t\t\t}} />\n\t\t\t<label className=\"form-check-label\" htmlFor=\"flexCheckChecked\">\n\t\t\t\t<b>\n\t\t\t\t\tI consent to the processing of my personal data in accordance with the information provided here.\n\t\t\t\t</b>\n\t\t\t</label>\n\t\t</div>\n\t\t{!showMore ? null : <>\n\t\t\t<h4>\n\t\t\t\tInformation on data processing\n\t\t\t</h4>\n\t\t\t<b>\n\t\t\t\tHow long will the personal data be processed?\n\t\t\t</b>\n\t\t\t<p>\n\t\t\t\tThe fully anonymized data collected as part of the study will be recorded and\n\t\t\t\tstatistically analyzed by an electronic data system. After completion of the study,\n\t\t\t\tall data will be stored and archived according to the currently valid guidelines.\n\t\t\t\tThe data of this study can be made accessible as open data on the Internet in a\n\t\t\t\tdata archive no later than five years after completion of the study. Thus, this\n\t\t\t\tstudy follows the recommendations of the German Research Foundation (DFG) and the\n\t\t\t\tGerman Psychological Society (DGPs) for quality assurance in research.\n\t\t\t</p>\n\t\t\t<b>What personal data are collected and processed?</b>\n\t\t\t<p>\n\t\t\t\tWe will collect no personal data, except gender, age and experience that participants specify\n\t\t\t\tthemselves, and no data of computer devices. Due to the anonymity of the survey, you are not\n\t\t\t\tidentifiable by this information. Directly personal or personally identifiable data that allows\n\t\t\t\tconclusions to be drawn about your identity is not collected.\n\t\t\t</p>\n\t\t\t<b>\n\t\t\t\tWhat special categories of personal data are collected and processed?\n\t\t\t</b>\n\t\t\t<p>\n\t\t\t\tNone\n\t\t\t</p>\n\t\t\t<b>\n\t\t\t\tLegal basis for processing\n\t\t\t</b>\n\t\t\t<p>\n\t\t\t\tProcessing is based on the consent of the data subject.\n\t\t\t</p>\n\t\t\t<b>\n\t\t\t\tData transfer to a country outside the EU/EEA or to an international organization,\n\t\t\t\tand data transfer subject to appropriate safeguards.\n\t\t\t</b>\n\t\t\t<p>\n\t\t\t\tThe anonymized data will be made available to the client of the study or to a body\n\t\t\t\tappointed by the client for scientific purposes or for the purpose of university teaching.\n\t\t\t\tThe anonymized data may also be made available to persons from non-EU member states in the\n\t\t\t\tcourse of international research collaborations.\n\t\t\t</p>\n\t\t\t<b>\n\t\t\t\tLegal or contractual requirement\n\t\t\t</b>\n\t\t\t<p>\n\t\t\t\tAny publication of research results is done anonymously. This ensures that it is impossible\n\t\t\t\tto draw conclusions about you as a person. Compliance with the Federal Data Protection Act is\n\t\t\t\tensured in full.\n\t\t\t</p>\n\t\t\t<b>\n\t\t\t\tAutomated procedure\n\t\t\t</b>\n\t\t\t<p>\n\t\t\t\tNo automated decision-making processes are carried out on the basis of personal data.\n\t\t\t</p>\n\t\t\t<b>\n\t\t\t\tInformation on the rights of data subjects\n\t\t\t</b>\n\t\t\t<p>\n\t\t\t\tSince no personal data is collected, once data collection is complete, it is no longer\n\t\t\t\tpossible to link the data in the data record to directly personal data (e.g., IP address) -\n\t\t\t\tthe data record is anonymous. This means that after completion of this data collection,\n\t\t\t\tit is no longer possible to specifically delete your personal data record, as it cannot be\n\t\t\t\tidentified.\n\t\t\t</p>\n\t\t\t<b>\n\t\t\t\tInformation about the right to withdraw consent\n\t\t\t</b>\n\t\t\t<p>\n\t\t\t\tParticipation in the study is entirely voluntary. You can withdraw your consent to\n\t\t\t\tparticipate at any time and without giving reasons, without incurring any disadvantages.\n\t\t\t\tThe processing of data prior to the withdrawal of consent remains lawful.\n\t\t\t</p>\n\t\t\t<b>\n\t\t\t\tData protection authority\n\t\t\t</b>\n\t\t\t<p>\n\t\t\t\tIn addition, data subjects may complain about what they consider to be unlawful data processing\n\t\t\t\tto the Austrian Data Protection Authority, Barichgasse 40-42, 1030 Vienna, Tel.: + 43 1 52 152-0, e-mail:{' '}\n\t\t\t\t<MailLink mail={'dsb@dsb.gv.at'} />.\n\t\t\t</p>\n\t\t\t<b>\n\t\t\t\tOur data protection officer\n\t\t\t</b>\n\t\t\t<p>\n\t\t\t\tThe data protection officer within the meaning of Art 37 GDPR can be reached at Johannes Kepler University\n\t\t\t\tLinz (JKU), Data Protection Unit, Altenberger Straße 69, 4040 Linz, <MailLink mail={'datenschutz@jku.at'} />.\n\t\t\t</p>\n\t\t</>}\n\t</div>\n}\n","import { Report } from \"report\";\nimport { IReportBookmark, IExportDataResult } from \"powerbi-models\";\nimport { models, VisualDescriptor } from \"powerbi-client\";\nimport 'powerbi-report-authoring';\nimport { IAppState, IExportFeatureVectorRow, IFeatureVector } from \"./interfaces\";\nimport { Provenance } from \"@visdesignlab/trrack\";\n\n/**\n * Captures and returns current bookmark\n * @param report Report to capture bookmark from\n */\nexport async function captureBookmark(report: Report): Promise<IReportBookmark | undefined> {\n\ttry {\n\t\treturn await report.bookmarksManager.capture();\n\t}\n\tcatch (error) {\n\t\tconsole.error(error);\n\t}\n\treturn undefined;\n}\n\n/**\n * Applies given bookmark on report\n * @param bookmark Bookmark to apply to\n * @param report Report to apply bookmark on\n */\nexport async function applyBookmark(bookmark: string, report: Report): Promise<void> {\n\ttry {\n\t\tawait report.bookmarksManager.applyState(bookmark);\n\t}\n\tcatch (error) {\n\t\tconsole.error(error);\n\t}\n}\n\n/**\n * Exports underlying data of given visual and handles errors\n * @param visual Visual to get underlying data from\n */\nexport async function exportData(visual: VisualDescriptor): Promise<IExportDataResult | null> {\n\t// starting on 12/16/2021, exportData throws error.\n\t// If call exportData repeatedly a few times then it starts to work.\n\t// Implement pattern to try 4 times before throwing an error\n\n\tlet tries = 0;\n\tlet result: models.IExportDataResult | null = null;\n\twhile (tries < 4) {\n\t\ttry {\n\t\t\tresult = await visual.exportData(models.ExportDataType.Summarized);\n\t\t\tbreak;\n\t\t} catch (err) {\n\t\t\ttries++;\n\t\t\tif (tries === 4) {\n\t\t\t\tconsole.error(('exportData - ' + visual.title), err);\n\t\t\t\t// console.error(`exportData [tries]: ${tries}`);\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\n/**\n * Create exact copy of object without referencing on it\n * @param obj Object to copy\n */\nexport function makeDeepCopy<T extends Object>(obj: T): T {\n\treturn typeof obj === 'object' ? JSON.parse(JSON.stringify(obj)) : obj;\n}\n\n/**\n * Takes string and returns multiple word string as one word camel case string\n * @param title String to be camel cased\n */\nexport function toCamelCaseString(title: string): string {\n\treturn title\n\t\t.split(' ')\n\t\t.map((t, i) => i === 0 ? t : t[0].toUpperCase() + t.slice(1))\n\t\t.join('');\n}\n\n/**\n * Categorizes columns of agiven visual to their attribute of the chart in a dict and returns it \n * @param visual \n */\nexport async function getVisualAttributeMapper(visual: VisualDescriptor): Promise<{ [key: string]: string }> {\n\t// const roleToAttributeMap = {\n\t// \t'Y': 'yAxis',\n\t// \t'Category': 'xAxis',\n\t// \t'Series': 'Legend',\n\t// \t'Values': 'Field'\n\t// };\n\n\tconst mapper: { [key: string]: string } = {};\n\tif (visual.getCapabilities) {\n\t\tconst capabilities = await visual.getCapabilities();\n\t\tif (capabilities.dataRoles) {\n\t\t\tawait Promise.all(capabilities.dataRoles.map(async (role) => {\n\t\t\t\tconst dataFields = await visual.getDataFields(role.name);\n\t\t\t\tif (dataFields.length > 0) {\n\t\t\t\t\tawait Promise.all(dataFields.map(async (d, idx) => {\n\t\t\t\t\t\tconst attribute = await visual.getDataFieldDisplayName(role.name, idx);\n\t\t\t\t\t\t// mapper[toCamelCaseString(attribute)] = roleToAttributeMap[role.name];\n\t\t\t\t\t\tmapper[toCamelCaseString(attribute)] = role.name;\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t}))\n\t\t}\n\t}\n\treturn mapper;\n}\n\n/**\n * Extracts current visuals from a dashboard of a report and returns them in an array\n * @param report Report to extract visuals from\n * Only possible if report is loaded\n */\nexport async function getCurrentVisuals(report: Report): Promise<VisualDescriptor[]> {\n\ttry {\n\t\treturn report\n\t\t\t.getPages().then(async (pages) => pages.filter((page) => page.isActive)[0]\n\t\t\t\t.getVisuals().then((visuals) => visuals\n\t\t\t\t\t.filter((v) => v.type !== 'card' && v.type !== 'shape' && v.type !== 'textbox')));\n\t} catch (err) {\n\t\tconsole.error(err);\n\t\treturn [];\n\t}\n}\n\n/**\n\t* Takes an appState and encodes it as a feature vector. Needs initial app state to know if an attribute is filtered\n\t* @param currState State to encode as a feature vector\n\t* @param rootState Initial app state\n\t*/\nexport function appStateToFeatureVector(currState: IAppState, rootState: IAppState): IFeatureVector {\n\tconst featureVector: IFeatureVector = {};\n\tconst selectedColumns = new Set<string>();\n\tconst filteredColumns = new Set<string>();\n\tObject.keys(rootState).forEach((vKey) => {\n\t\tconst { visState, selected, type } = currState[vKey];\n\t\tconst rootVisState = rootState[vKey].visState;\n\t\tconst categoryMapper = rootState[vKey].categoryMapper;\n\t\tObject.keys(rootVisState).forEach((aKey) => {\n\t\t\tconst rootAttribute = rootVisState[aKey];\n\t\t\tconst currAttribute = visState[aKey];\n\t\t\tlet columnTitle = vKey + '.' + aKey;\n\t\t\tconst vector = [] as number[];\n\t\t\t// number arrays will be used as they are\n\t\t\tif (categoryMapper[aKey] === 'Y') {\n\t\t\t\tcolumnTitle += \"<numerical>\";\n\t\t\t\tvector.push(...(currAttribute.length > 0 ? currAttribute as number[] : [0]));\n\t\t\t} else { // string arrays will be encoded\n\t\t\t\tcolumnTitle += \"<categorical>\";\n\t\t\t\t(rootAttribute as string[]).forEach((root) => {\n\t\t\t\t\tif (selected && selected[aKey]?.includes(root)) {// if selected 1 : 0\n\t\t\t\t\t\tvector.push(1);\n\t\t\t\t\t\tselectedColumns.add(columnTitle);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvector.push(0)\n\t\t\t\t\t}\n\t\t\t\t\tif (type !== 'slicer') { // slicers can't be filtered\n\t\t\t\t\t\tif ((currAttribute as string[]).includes(root)) { // if filtered then 1 (included = !filtered)\n\t\t\t\t\t\t\tvector.push(0);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvector.push(1);\n\t\t\t\t\t\t\tfilteredColumns.add(columnTitle);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tfeatureVector[columnTitle] = vector;\n\t\t});\n\t});\n\n\treturn { selectedValues: Array.from(selectedColumns).join(\", \") || \"\", filteredValues: Array.from(filteredColumns).join(\", \") || \"\", ...featureVector };\n};\n\n/**\n * Goes through graph, returns feature vector row for each node and returns feature vector matrix\n * @param provenance Provenance object to featurize\n */\nexport function featureVectorizeGraph(provenance: Provenance<IAppState, string, void>, addCols: { [title: string]: string | number } = {}): IExportFeatureVectorRow[] {\n\tconst { root, graph } = provenance;\n\tconst featureVectors: IExportFeatureVectorRow[] = [];\n\n\tObject.keys(graph.nodes).forEach((key) => {\n\t\tconst currNode = graph.nodes[key];\n\t\tconst currVector = appStateToFeatureVector(\n\t\t\tprovenance.getState(currNode.id), provenance.getState(root.id)\n\t\t);\n\t\t// adding header row\n\t\tif (key === root.id) {\n\t\t\tfeatureVectors.push(['timestamp', ...Object.keys(addCols), 'triggeredAction', ...Object.keys(currVector)]);\n\t\t}\n\t\tconst newRow: IExportFeatureVectorRow = [currNode.metadata.createdOn || -1, ...Object.values(addCols), currNode.label];\n\t\t// skip first columns (that are not in the feature vector)\n\t\t(featureVectors[0] as string[]).slice(featureVectors[0].length - Object.keys(currVector).length).forEach((title) => newRow.push(currVector[title] ? currVector[title] : \"\"));\n\t\tfeatureVectors.push(newRow);\n\t});\n\treturn featureVectors;\n}\n\n/**\n * Takes feature vector matrix and converts it to a csv-string\n * @param exportFeatureVectorRows Feature vector matrix\n */\nexport function featureVectorsToCsvString(exportFeatureVectorRows: IExportFeatureVectorRow[]): string {\n\tlet csvString = 'data:text/csv;charset=utf-8,';\n\texportFeatureVectorRows.forEach((row, idx) => {\n\t\tif (idx === 0) {\n\t\t\tcsvString += row.join(';') + '\\r\\n';\n\t\t} else {\n\t\t\t(row as IExportFeatureVectorRow).forEach((cell, i) => {\n\t\t\t\tlet newString = typeof cell === \"string\" ? cell : JSON.stringify(cell);\n\t\t\t\t// removes brackets\n\t\t\t\tnewString = newString.replaceAll('[', '').replaceAll(']', '');\n\t\t\t\tcsvString += newString;\n\t\t\t\tcsvString += i < row.length - 1 ? ';' : '\\r\\n'\n\t\t\t});\n\t\t}\n\t});\n\treturn csvString;\n}\n","import React from \"react\";\nimport { IExportFeatureVectorRow, IProvenanceQuestion } from \"../../utils/interfaces\";\nimport { MailLink } from \"../../utils/MailLink\";\nimport { featureVectorizeGraph, featureVectorsToCsvString } from \"../../utils/utils\";\n\nexport function UploadPage({\n\tquestionProvanencesRef,\n\tage,\n\tgender,\n\tdashboardExperience,\n\tpowerBIExperience,\n\tconfidence,\n\tsatisfaction,\n\tuser\n}: {\n\tquestionProvanencesRef: React.MutableRefObject<IProvenanceQuestion[]>\n\tage: number;\n\tgender: string;\n\tdashboardExperience: number;\n\tpowerBIExperience: number;\n\tconfidence: number;\n\tsatisfaction: number;\n\tuser: string;\n}) {\n\tconst [downloaded, setDownloaded] = React.useState<boolean>(false);\n\tconst [uploadClicked, setUploadClicked] = React.useState<boolean>(false);\n\n\tconst getCsvString = (): string => {\n\t\t// group vectors from each provenance first to cols to avoid different order\n\t\t// between cols of different provenances\n\t\tconst csvCols: { [key: string]: any[] } = {};\n\t\tquestionProvanencesRef.current.forEach((y, i) => {\n\t\t\tconst addCols = {\n\t\t\t\tuser,\n\t\t\t\tage,\n\t\t\t\tgender,\n\t\t\t\tdashboardExperience,\n\t\t\t\tpowerBIExperience,\n\t\t\t\tconfidence,\n\t\t\t\tsatisfaction,\n\t\t\t\t...Object.keys(y)\n\t\t\t\t\t.filter((key) => key !== \"provenance\")\n\t\t\t\t\t.reduce((obj, key) => ({ ...obj, [key]: y[key] }), {})\n\t\t\t};\n\t\t\tlet vectors: IExportFeatureVectorRow[] = featureVectorizeGraph(y.provenance, addCols);\n\n\t\t\tif (Object.keys(csvCols).length === 0) {\n\t\t\t\t(vectors[0] as string[]).forEach((key) => {\n\t\t\t\t\tcsvCols[key] = [];\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t(vectors[0] as string[]).forEach((key: string, j: number) => {\n\t\t\t\tvectors.slice(1).forEach((value, i) => {\n\t\t\t\t\tcsvCols[key].push(value[j]);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t\tconst csvRows: IExportFeatureVectorRow[] = [];\n\t\tconst keys = Object.keys(csvCols);\n\n\t\tcsvRows.push(keys);\n\t\tcsvCols[keys[0]].forEach((val, i) => {\n\t\t\tcsvRows.push(keys.map((key) => csvCols[key][i]));\n\t\t});\n\n\t\treturn featureVectorsToCsvString(csvRows);\n\t}\n\n\tconst downloadGraphAsFeatVecCsv = (): void => {\n\t\tconst uri = encodeURI(getCsvString());\n\t\tconst anchor = document.createElement('a');\n\t\tanchor.style.display = 'none';\n\t\tif (\"download\" in anchor) {\n\t\t\tanchor.download = `provectories-${user}.csv`;\n\t\t\tanchor.href = uri;\n\t\t\tanchor.click();\n\t\t} else {\n\t\t\twindow.open(uri, '_self');\n\t\t}\n\t\tanchor.remove();\n\t};\n\n\treturn <div>\n\t\t<h2>Thank you for attending!</h2>\n\t\t<h4>To save your answers please click following button to download it as csv-file:</h4>\n\t\t<button\n\t\t\tclassName=\"btn btn-secondary\"\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdownloadGraphAsFeatVecCsv();\n\t\t\t\tsetDownloaded(true);\n\t\t\t}}\n\t\t>\n\t\t\tDownload CSV\n\t\t</button>\n\t\t{downloaded ? <>\n\t\t\t<h4>When downloaded please upload your created csv-file here:</h4>\n\t\t\t<a\n\t\t\t\thref=\"https://cloud.se.jku.at/u/d/f5a9d8ee08a8449d8a41/\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\tonClick={() => setUploadClicked(true)}\n\t\t\t>\n\t\t\t\thttps://cloud.se.jku.at/u/d/f5a9d8ee08a8449d8a41/\n\t\t\t</a>\n\t\t</> : null}\n\t\t{uploadClicked ? <>\n\t\t\t<h3>Thank you!</h3>\n\t\t\t<p>\n\t\t\t\tIf you have any questions or want further information about the topic\n\t\t\t\tplease just write a mail to: <MailLink mail={'thomas.schachinger@icloud.com'} />.</p>\n\t\t\t<p>To logout just close this window.</p>\n\t\t</> : null}\n\t</div>\n}\n","import { Provenance, initProvenance } from '@visdesignlab/trrack';\nimport { IAppState } from '../utils/interfaces';\nimport { ActionReturnType } from '@visdesignlab/trrack/dist/Types/Action';\n\nexport interface IAction {\n  event: (onDashboardClick: () => Promise<{ newState: IAppState, label: string }>) => void;\n}\n\ninterface IAppProvenance {\n  provenance: Provenance<IAppState, string, void>;\n  actions: IAction;\n}\n\n/**\n * Initializes trrack and trrack-vis provenance\n * @param defaultState Initial state of the dashboard\n */\nexport function setupProvenance(defaultState: IAppState): IAppProvenance {\n  const provenance = initProvenance<IAppState, string, void>(defaultState as IAppState);\n\n  provenance.done();\n\n  const event = async (onDashboardClick: () => Promise<{ newState: IAppState, label: string }>) => {\n    const { newState, label } = await onDashboardClick();\n    provenance.apply({\n      apply: (state: IAppState) => ({\n        state: newState as IAppState,\n        label,\n        stateSaveMode: 'Complete',\n        actionType: 'Regular',\n        eventType: '',\n        meta: {}\n      } as ActionReturnType<IAppState, string>)\n    }, label);\n  };\n\n  return {\n    provenance,\n    actions: {\n      event\n    },\n  };\n}\n","import { Report } from \"report\";\nimport { setupProvenance } from \"./Provenance\";\nimport { IAppState } from \"../utils/interfaces\";\nimport { exportData, toCamelCaseString, getCurrentVisuals, makeDeepCopy, getVisualAttributeMapper } from \"../utils/utils\";\nimport { Provenance } from \"@visdesignlab/trrack\";\nimport 'powerbi-report-authoring';\nimport { IExportDataResult } from \"powerbi-models\";\n\nexport const provenance: Provenance<IAppState, string, void> = {} as Provenance<IAppState, string, void>;\n\nfunction setProvenance(newProvenance: Provenance<IAppState, string, void>) {\n\tObject.keys(newProvenance).forEach((key) => {\n\t\tprovenance[key] = newProvenance[key];\n\t});\n}\n\nclass Provectories {\n\tprivate readonly appState: IAppState;\n\tprivate readonly report: Report;\n\n\tconstructor(report: Report) {\n\t\tthis.appState = {};\n\t\tthis.report = report;\n\t\tthis.init();\n\t}\n\n\t/**\n\t * Sets the selected attribute of given visuals extracted from the click-event\n\t * Only possible if report is loaded\n\t * @param event click-event from dashboard eventlistener\n\t */\n\tsetVisSelected(event: any): string {\n\t\tconst { dataPoints } = event.detail;\n\t\tconst { type, title } = event.detail.visual;\n\t\tconst visuals = this.appState;\n\t\tlet label = `${title} (${type}) - `;\n\n\t\t// clears non slicer values when non slicer selection\n\t\tif (type !== 'slicer') {\n\t\t\tObject.keys(visuals).forEach((key) => {\n\t\t\t\tconst visDesc = visuals[key];\n\t\t\t\tvisDesc.selected = visDesc.type !== 'slicer' ? null : visDesc.selected;\n\t\t\t});\n\t\t}\n\t\t// asign selected values\n\t\tconst visDesc = visuals[toCamelCaseString(title)];\n\t\tif (dataPoints.length > 0) {\n\t\t\tconst selections: { [key: string]: string[] } = {};\n\n\t\t\tdataPoints.forEach((point: any) => {\n\t\t\t\tpoint.identity.forEach((i: any) => {\n\t\t\t\t\tselections[i.target.column] = [...(selections[i.target.column] ? selections[i.target.column] : []), i.equals];\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tObject.keys(selections).forEach((key, i) => {\n\t\t\t\tlabel += `${i > 0 ? '. ' : ''}${key}: `;\n\t\t\t\tvisDesc.selected = { ...visDesc.selected, [key]: Array.from(new Set(selections[key])) };\n\t\t\t\tselections[key].forEach((value, j) => {\n\t\t\t\t\tlabel += `${j > 0 ? ', ' : ''}${value}`;\n\t\t\t\t})\n\t\t\t})\n\t\t\treturn label + ' selected';\n\t\t}\n\t\tvisDesc.selected = null;\n\t\treturn label + 'deselected';\n\t};\n\n\t/**\n\t * Sets the current state of all visuals of the dashboard on given appState\n\t * Only possible if report is loaded\n\t * @param appState appState object of which the visuals should be set\n\t */\n\tasync setVisState(appState: IAppState): Promise<IAppState> {\n\t\tconst visuals = await getCurrentVisuals(this.report);\n\t\tconst exportedData: { [visualTitle: string]: IExportDataResult | null } = {};\n\n\t\t// go through all async calls at the beginning so the exportData doesn't change\n\t\t// because of another dashboard event\n\t\tawait Promise.all(visuals.map(async (v) => {\n\t\t\texportedData[toCamelCaseString(v.title)] = await exportData(v);\n\t\t}));\n\n\t\tObject.keys(exportedData).forEach(async (key) => {\n\t\t\tconst result = exportedData[key];\n\t\t\tif (!result) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// vectorize data string && remove last row (empty)\n\t\t\tconst data = result.data.replaceAll(\"\\n\", \"\").split('\\r').map((d) => d.split(',')).slice(0, -1);\n\t\t\tconst groupedData: { [key: string]: any[] } = {};\n\t\t\tconst { visState, categoryMapper } = appState[key];\n\n\t\t\t// group data columnwise\n\t\t\tdata[0].forEach((header, index) => {\n\t\t\t\tconst key = toCamelCaseString(header);\n\t\t\t\tgroupedData[key] = [];\n\t\t\t\tconst currSet = groupedData[key];\n\n\t\t\t\tdata.forEach((row, idx) => {\n\t\t\t\t\t// skip headers and empty values\n\t\t\t\t\tif (idx === 0 || !row[index]) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tconst cell = row[index];\n\t\t\t\t\tconst number = cell.match(/\\d+/);\n\t\t\t\t\tcurrSet.push(number ? parseInt(number[0]) : cell);\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// assign to visual state in right format\n\t\t\tObject.keys(groupedData).forEach((key) => {\n\t\t\t\tconst currArr: string[] | number[] = Array.from(groupedData[key]);\n\t\t\t\tvisState[key] = categoryMapper[key] === 'Y' ?\n\t\t\t\t\t(currArr as number[]) : Array.from(new Set(currArr as string[]));\n\t\t\t});\n\t\t});\n\t\treturn appState;\n\t};\n\n\t/**\t\n\t* Initialize appState\n\t* Only possible if report is loaded\n\t*/\n\tasync initAppState() {\n\t\tconst visuals = await getCurrentVisuals(this.report);\n\t\tawait Promise.all(visuals.map(async (v) => { // get initial slicer selection\n\t\t\tlet selected: null | { [key: string]: string[] } = null\n\t\t\tif (v.type === 'slicer') {\n\t\t\t\tconst slicerState = await v.getSlicerState();\n\t\t\t\tselected = {};\n\t\t\t\tif (slicerState.filters.length > 0) {\n\t\t\t\t\tslicerState.filters.forEach((filter: any) => {\n\t\t\t\t\t\tif (!selected![filter.target.column]) {\n\t\t\t\t\t\t\tselected![filter.target.column] = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tselected![filter.target.column].push(...filter.values.map((vals: string | number) => vals));\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst categoryMapper = await getVisualAttributeMapper(v);\n\t\t\tconst title = toCamelCaseString(v.title);\n\t\t\tif (this.appState && !this.appState[title]) {\n\t\t\t\tthis.appState[toCamelCaseString(title)] = { selected, type: v.type, visState: {}, categoryMapper };\n\t\t\t}\n\t\t}));\n\t};\n\n\t/**\n\t * initializes provenance, click-event handler and the appState\n\t */\n\tasync init(): Promise<void> {\n\t\tawait this.initAppState();\n\t\tconst appState = await this.setVisState(this.appState);\n\t\tconst { actions, provenance } = setupProvenance(appState);\n\n\t\tsetProvenance(provenance);\n\t\tconst activePage = (await this.report.getActivePage()).name;\n\n\t\tthis.report?.on(\"dataSelected\", async (event: any) => {\n\t\t\t// used closure to check if the current page equals the page provenance is initialized on\n\t\t\t// otherwise the provenance would make no sense for this case\n\t\t\tif (activePage === (await this.report.getActivePage()).name) {\n\t\t\t\tconst label = this.setVisSelected(event);\n\n\t\t\t\t// function call is done in provenance for better performance on the dashboard\n\t\t\t\tconst onDashboardClick = async () => {\n\t\t\t\t\tconst appState = await this.setVisState(makeDeepCopy(this.appState));\n\t\t\t\t\treturn { newState: appState, label };\n\t\t\t\t};\n\n\t\t\t\tactions.event(onDashboardClick);\n\t\t\t} else {\n\t\t\t\tconsole.log(\"Not on the tracked page\");\n\t\t\t}\n\t\t});\n\t};\n}\n\nexport function provectories(report: Report): void {\n\tnew Provectories(report);\n}","// ----------------------------------------------------------------------------\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n// ----------------------------------------------------------------------------\n\nimport * as React from \"react\";\nimport { service, factories, models, IEmbedConfiguration, Report } from \"powerbi-client\";\nimport { provectories } from \"../provenance/Provectories\";\nimport * as config from \"./Config\";\n\nconst powerbi = new service.Service(factories.hpmFactory, factories.wpmpFactory, factories.routerFactory);\n\nexport function ProvectoriesDashboard({\n\tquestionId,\n\treportRef,\n\terror,\n\tembedUrl,\n\taccessTokenRef\n}: {\n\tquestionId: number;\n\treportRef: React.MutableRefObject<Report | undefined>;\n\tembedUrl: string;\n\terror: string[];\n\taccessTokenRef: React.MutableRefObject<string>;\n}) {\n\tconst reportContainerRef = React.useRef<HTMLDivElement>(null);\n\n\tconst renderMyReport = React.useCallback((): Report | undefined => {\n\t\tlet report: any | Report = null;\n\t\tif (error.length) {\n\t\t\t// Cleaning the report container contents and rendering the error message in multiple lines\n\t\t\treportContainerRef.current!.textContent = \"\";\n\t\t\terror.forEach(line => {\n\t\t\t\treportContainerRef.current!.appendChild(document.createTextNode(line));\n\t\t\t\treportContainerRef.current!.appendChild(document.createElement(\"br\"));\n\t\t\t});\n\t\t\tconsole.log('Error', error);\n\t\t} else if (accessTokenRef.current !== \"\" && embedUrl !== \"\") { // comment this condition\n\n\t\t\tconst embedConfiguration: IEmbedConfiguration = {\n\t\t\t\ttype: \"report\",\n\t\t\t\ttokenType: models.TokenType.Aad,\n\t\t\t\taccessToken: accessTokenRef.current,\n\t\t\t\tembedUrl,\n\t\t\t\tpermissions: models.Permissions.All,\n\t\t\t\tid: config.reportId,\n\t\t\t\tsettings: {\n\t\t\t\t\tvisualRenderedEvents: true,\n\t\t\t\t\tpanes: {\n\t\t\t\t\t\tfilters: {\n\t\t\t\t\t\t\tvisible: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\tpageNavigation: {\n\t\t\t\t\t\t\tvisible: true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (reportContainerRef.current) {\n\t\t\t\treport = powerbi.embed(reportContainerRef.current, embedConfiguration) as Report;\n\n\t\t\t\t// Clear any other loaded handler events\n\t\t\t\treport.off(\"loaded\");\n\n\t\t\t\t// Triggers when a content schema is successfully loaded\n\t\t\t\treport.on(\"loaded\", function () {\n\t\t\t\t\tconsole.log(\"Report load successful\");\n\t\t\t\t\t// init provectories\n\t\t\t\t\tprovectories(report);\n\t\t\t\t});\n\n\t\t\t\t// Clear any other error handler event\n\t\t\t\treport.off(\"error\");\n\n\t\t\t\t// Below patch of code is for handling errors that occur during embedding\n\t\t\t\treport.on(\"error\", function (event: any) {\n\t\t\t\t\tconst errorMsg = event.detail;\n\t\t\t\t\t// Use errorMsg variable to log error in any destination of choice\n\t\t\t\t\tconsole.error(errorMsg);\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn report;\n\t\t} else {\n\t\t\tthrow Error(\"No container for the report\");\n\t\t}\n\t}, [error, embedUrl, accessTokenRef, reportContainerRef]);\n\n\tReact.useEffect(() => {\n\t\treportRef.current = renderMyReport();\n\t\tconst container = reportContainerRef.current;\n\t\treturn () => {\n\t\t\tif (container) {\n\t\t\t\tpowerbi.reset(container);\n\t\t\t}\n\t\t}\n\t}, [renderMyReport, questionId, reportRef]);\n\n\treturn <div id=\"reportContainer\" className=\"d-flex mb-1\" ref={reportContainerRef} style={{ height: \"65vh\" }} >\n\t\tLoading the report...\n\t</div>;\n}","import { Report } from 'powerbi-client';\nimport * as React from 'react';\nimport { ProvectoriesDashboard } from '../../power-bi/ProvectoriesDashboard';\nimport { ICurrentQuestion } from '../../utils/interfaces';\nimport { RadioButton } from '../../utils/RadioButton';\n\nexport function QuestionPage({\n\treportRef,\n\tembedUrl,\n\terror,\n\taccessTokenRef,\n\tcurrentQuestion,\n\tsetCurrentQuestion,\n\tsetShowNextButton,\n}: {\n\treportRef: React.MutableRefObject<Report | undefined>;\n\tembedUrl: string;\n\terror: string[];\n\taccessTokenRef: React.MutableRefObject<string>;\n\tcurrentQuestion: ICurrentQuestion;\n\tsetCurrentQuestion: React.Dispatch<React.SetStateAction<ICurrentQuestion | null>>;\n\tsetShowNextButton: (showNextButton: boolean) => void;\n}) {\n\tconst [reportLoaded, setReportLoaded] = React.useState<boolean>(false);\n\tconst [selectedAnswers, setSelectedAnswers] = React.useState<string[]>([]);\n\n\tReact.useEffect(() => {\n\t\tsetReportLoaded(false);\n\t\tsetSelectedAnswers([...Object.keys(currentQuestion.answerPossibilities).map(() => \"\")]);\n\t\treportRef.current?.on(\"rendered\", () => {\n\t\t\tsetReportLoaded(true);\n\t\t\treportRef.current?.off(\"rendered\");\n\t\t})\n\t}, [currentQuestion.questionId, currentQuestion.answerPossibilities, reportRef]);\n\n\tReact.useEffect(() => {\n\t\tsetCurrentQuestion((prev) => ({ ...prev as ICurrentQuestion, selectedAnswer: selectedAnswers.join(\" \") }))\n\t}, [selectedAnswers, setCurrentQuestion]);\n\n\treturn <div className=\"ms-2\">\n\t\t<div className=\"my-3\">\n\t\t\t<ProvectoriesDashboard\n\t\t\t\treportRef={reportRef}\n\t\t\t\taccessTokenRef={accessTokenRef}\n\t\t\t\tembedUrl={embedUrl}\n\t\t\t\terror={error}\n\t\t\t\tquestionId={currentQuestion.questionId}\n\t\t\t/>\n\t\t</div>\n\t\t<div>\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-6 d-flex align-items-center\">\n\t\t\t\t\t<h5>{currentQuestion.question}</h5>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-6 d-flex justify-content-center align-items-center\">\n\t\t\t\t\t{reportLoaded && selectedAnswers.length > 0 ? <>\n\t\t\t\t\t\t{Object.keys(currentQuestion.answerPossibilities).map((key, i) =>\n\t\t\t\t\t\t\t<React.Fragment key={`${currentQuestion.questionId}-${key}`}>{\n\t\t\t\t\t\t\t\tkey === 'numeric' ? <>\n\t\t\t\t\t\t\t\t\t<h5 className='form-label my-0 mx-2 text-capitalize'>\n\t\t\t\t\t\t\t\t\t\tAnswer:\n\t\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tvalue={selectedAnswers[i]}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\tconst newVal = e.target.value;\n\t\t\t\t\t\t\t\t\t\t\tsetSelectedAnswers((prevState) =>\n\t\t\t\t\t\t\t\t\t\t\t\t[...prevState.map((p, j) => j === i ? newVal : p)]\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\t\t\taria-label={`${currentQuestion.questionId}-${key}-input`}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</> : <>\n\t\t\t\t\t\t\t\t\t<h5 className='form-label my-0 mx-2 text-capitalize'>\n\t\t\t\t\t\t\t\t\t\t{key}:\n\t\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\t\tclassName=\"form-select\"\n\t\t\t\t\t\t\t\t\t\tvalue={selectedAnswers[i] || ''}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\tconst newVal = e.target.value;\n\t\t\t\t\t\t\t\t\t\t\tsetSelectedAnswers((prevState) =>\n\t\t\t\t\t\t\t\t\t\t\t\t[...prevState.map((p, j) => j === i ? newVal : p)]\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\taria-label={`${currentQuestion.questionId}-${key}-select`}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<option disabled value=\"\"></option>\n\t\t\t\t\t\t\t\t\t\t{currentQuestion.answerPossibilities[key].map((answer) =>\n\t\t\t\t\t\t\t\t\t\t\t<option\n\t\t\t\t\t\t\t\t\t\t\t\tkey={`${currentQuestion.questionId}-${answer}`}\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={answer}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{answer}\n\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t}</React.Fragment>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</> : null}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{selectedAnswers.every((a) => a.length > 0) ? <div className=\"mt-4 row\">\n\t\t\t\t<div className=\"col-6 d-flex align-items-center\">\n\t\t\t\t\t<h5>Rate the complexity of the task:</h5>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-6\">\n\t\t\t\t\t<div className=\"btn-group w-100\" role=\"group\" aria-label=\"mental-effort-radio-button-group\">\n\t\t\t\t\t\t{[{ value: 1, title: 'very easy' }, { value: 2, title: 'easy' }, { value: 3, title: 'not so easy' }]\n\t\t\t\t\t\t\t.map((val) => <RadioButton<number>\n\t\t\t\t\t\t\t\tkey={`mental-effort-radio-button-${val.title}`}\n\t\t\t\t\t\t\t\thtmlFor={`mental-effort-radio-button-${val.title}`}\n\t\t\t\t\t\t\t\tvalue={val.value}\n\t\t\t\t\t\t\t\ttitle={val.title}\n\t\t\t\t\t\t\t\tselected={currentQuestion.mentalEffort}\n\t\t\t\t\t\t\t\tsetSelected={(mentalEffort: number) => {\n\t\t\t\t\t\t\t\t\tsetCurrentQuestion((prev) => ({ ...prev as ICurrentQuestion, mentalEffort }));\n\t\t\t\t\t\t\t\t\tsetShowNextButton(true);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>)\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div> : null}\n\t\t</div>\n\t</div >\n}\n","import React from \"react\";\nimport { RadioButton } from \"../../utils/RadioButton\";\n\nexport function UsabilityEvaluationPage({\n\tsatisfaction,\n\tsetSatisfaction,\n\tsetShowNextButton\n}: {\n\tsatisfaction: number;\n\tsetSatisfaction: (satisfaction: number) => void;\n\tsetShowNextButton: (showNextButton: boolean) => void;\n}) {\n\n\tReact.useEffect(() => {\n\t\tif (satisfaction > -1) {\n\t\t\tsetShowNextButton(true);\n\t\t}\n\t}, [satisfaction, setShowNextButton]);\n\n\treturn <div>\n\t\t<h3 className=\"mb-4\">User Experience</h3>\n\t\t<div className=\"row my-3\">\n\t\t\t<div className=\"row mb-3\">\n\t\t\t\t<h4>How would you rate the usability of the hiring dashboard?</h4>\n\t\t\t</div>\n\t\t\t<div className=\"row w-75\">\n\t\t\t\t<div className=\"btn-group w-100\" role=\"group\" aria-label=\"satisfaction-radio-button-group\">\n\t\t\t\t\t{[1, 2, 3, 4, 5, 6]\n\t\t\t\t\t\t.map((num) => <RadioButton<number>\n\t\t\t\t\t\t\tkey={`satisfaction-radio-button-${num}`}\n\t\t\t\t\t\t\thtmlFor={`satisfaction-radio-button-${num}`}\n\t\t\t\t\t\t\tvalue={num}\n\t\t\t\t\t\t\ttitle={String(num)}\n\t\t\t\t\t\t\tselected={satisfaction}\n\t\t\t\t\t\t\tsetSelected={setSatisfaction}\n\t\t\t\t\t\t/>)\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"d-flex justify-content-between text-muted\">\n\t\t\t\t\t<i>1 - very low usability</i><i>6 - very high usability</i>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n}\n","import { IEvaluationQuestion } from \"./interfaces\";\n\nconst month = [\n\t'Jan',\n\t'Feb',\n\t'Mar',\n\t'Apr',\n\t'May',\n\t'Jun',\n\t'Jul',\n\t'Aug',\n\t'Sep',\n\t'Oct',\n\t'Nov',\n\t'Dec'\n];\n\nconst randomEvaluationQuestions: IEvaluationQuestion[] = [\n\t{\n\t\tquestionId: 1,\n\t\ttaskId: 1,\n\t\tquestion: 'In which month of 2014 were most Group A employees hired in the region Northwest?',\n\t\tanswerPossibilities: {\n\t\t\tmonth\n\t\t},\n\t\tcorrectAnswer: 'Jul'\n\t},\n\t{\n\t\tquestionId: 2,\n\t\ttaskId: 1,\n\t\tquestion: 'How many part-time employees were hired in region East in 2014?',\n\t\tanswerPossibilities: { numeric: [] },\n\t\tcorrectAnswer: '1021'\n\t},\n\t{\n\t\tquestionId: 3,\n\t\ttaskId: 2,\n\t\tquestion: 'Were more Group F employees hired in 2012 or in 2013?',\n\t\tanswerPossibilities: {\n\t\t\tyear: [\n\t\t\t\t'2012',\n\t\t\t\t'2013',\n\t\t\t],\n\t\t},\n\t\tcorrectAnswer: '2013'\n\t},\n\t{\n\t\tquestionId: 4,\n\t\ttaskId: 2,\n\t\tquestion: 'In which month most employees were hired in the Northwest either in 2012 or 2014? Answer with month and year.',\n\t\tanswerPossibilities: {\n\t\t\tmonth,\n\t\t\tyear: [\n\t\t\t\t'2012',\n\t\t\t\t'2014',\n\t\t\t]\n\t\t},\n\t\tcorrectAnswer: 'Jul 2014'\n\t},\n\t{\n\t\tquestionId: 5,\n\t\ttaskId: 3,\n\t\tquestion: 'How many new Group B hires in the East region were in the range from January to June in 2012?',\n\t\tanswerPossibilities: { numeric: [] },\n\t\tcorrectAnswer: '22'\n\t},\n\t{\n\t\tquestionId: 6,\n\t\ttaskId: 3,\n\t\tquestion: 'In 2013 how many employees were hired in region South across all ethnicities except Group A?',\n\t\tanswerPossibilities: { numeric: [] },\n\t\tcorrectAnswer: '768'\n\t}\n];\n\nconst lastEvaluationQuestions: IEvaluationQuestion[] = [\n\t{\n\t\tquestionId: 7,\n\t\ttaskId: 4,\n\t\tquestion: 'Comparing each year, in which month were most part-time hires? Answer with month and year.',\n\t\tanswerPossibilities: {\n\t\t\tmonth,\n\t\t\tyear: [\n\t\t\t\t'2010',\n\t\t\t\t'2011',\n\t\t\t\t'2012',\n\t\t\t\t'2013',\n\t\t\t\t'2014',\n\t\t\t\t'2015',\n\t\t\t\t'2016'\n\t\t\t]\n\t\t},\n\t\tcorrectAnswer: 'Sep 2014'\n\t},\n\t{\n\t\tquestionId: 8,\n\t\ttaskId: 4,\n\t\tquestion: 'Which region had at least one month with a lower number of new hires in 2012 than in 2011?',\n\t\tanswerPossibilities: {\n\t\t\tregion: [\n\t\t\t\t'North',\n\t\t\t\t'Midwest',\n\t\t\t\t'Northwest',\n\t\t\t\t'East',\n\t\t\t\t'Central',\n\t\t\t\t'South',\n\t\t\t\t'West'\n\t\t\t]\n\t\t},\n\t\tcorrectAnswer: 'South'\n\t}\n]\n\nexport const EVALUATION_QUESTIONS: IEvaluationQuestion[] = [\n\t...randomEvaluationQuestions.sort((a, b) => 0.5 - Math.random()),\n\t...lastEvaluationQuestions\n];\n","import * as React from \"react\";\n\nexport function ProcedurePage() {\n\treturn <div>\n\t\t<h2>Procedure</h2>\n\t\t<ul>\n\t\t\t<li>No sensitive personal data will be collected in this survey. Details can be found on the next page.</li>\n\t\t\t<li>Before the survey starts you will be asked about your age, gender and experiences with dashboards.</li>\n\t\t\t<li>\n\t\t\t\tThere will then be a brief onboarding on the new hires dashboard that will be used describing the elements,\n\t\t\t\tbehaviour and its interaction possibilites.\n\t\t\t</li>\n\t\t\t<li>The following 8 questions can be answered by using the implemented dashboard.</li>\n\t\t\t<li>After each question you will be asked to rate the complexity of the task.</li>\n\t\t\t<li>When you are done with all tasks, there will be an evaluation of the usability of the tool.</li>\n\t\t\t<li>Finally, you will be asked to safe your answers. Therefore, please follow the instructions on the last page.</li>\n\t\t\t<li>Overall this survey will take about 10 minutes.</li>\n\t\t\t<li>Please be patient with the tool - it might take a few seconds until the dashboard is fully loaded when switching pages.</li>\n\t\t\t<li><b>And please don't forget to upload your result CSV-file in the end - otherwise no results will be saved!</b></li>\n\t\t</ul>\n\t\t<h3>Thank you for your participation!</h3>\n\t</div>\n}","import React from \"react\";\nimport Onboarding from \"../../utils/NewHiresDashboardOnboarding.png\"\n\n\nexport function OnboardingPage() {\n    return <div>\n        <h2>Onboarding</h2>\n        <img style={{ width: '65%' }} alt={\"Description of the new hires dashboard.\"} src={Onboarding} />\n        <h4>Description</h4>\n        <div className=\"row mt-3\">\n            <ol className=\"ms-4\">\n                <li>Number of new hires</li>\n                <li>Number of new hires from the same period last year (= SPLY)</li>\n                <li>New hires and the new hires from the same period last year (= SPLY) broken down by months</li>\n                <li>Distribution of new hires categorized by full-time and part-time description (= FPDesc)</li>\n                <li>New hires broken down by ethnicity</li>\n                <li>New hires categorized by region</li>\n                <li>Filter dashboard by year</li>\n                <li>Filter dashboard by ethnicity</li>\n                <li>Filter dashboard by region</li>\n            </ol>\n            <p>\n                The data shown in the visualizations and aggregations (1 - 6) is influenced by applied\n                filters and selections. Basically, the visualizations and aggregations represent the same\n                data but differently categorized, except SPLY values. SPLY values display the number\n                of hires for the same filters and selection but from the previous year. Interacting\n                with the dashboard influences all visualizations and aggregations by highlighting selected\n                data and hiding filtered data.\n            </p>\n            <h4>Possibilities to interact with the dashboard:</h4>\n            <ul className=\"ms-4\">\n                <li>Selecting by clicking on elements (data points and legends) in the visualization (elements 3 - 6)</li>\n                <li>Applying filters by clicking on the filters (elements 7 - 9)</li>\n                <li>Ctrl + Click (Cmd + Click for macOS) allows multi-selecting for visualization elements and filters (elements 3 - 9)</li>\n                <li>Visualizations also allow drag-selection for selecting multiple data points at once (elements 3 - 6)</li>\n            </ul>\n        </div>\n    </div >;\n}","import * as React from \"react\";\nimport { UserAgentApplication, AuthError, AuthResponse } from \"msal\";\nimport { v4 as uuid } from 'uuid';\nimport * as config from \"../power-bi/Config\";\nimport { DemographicsPage } from \"./pages/DemographicsPage\";\nimport { DataProtectionPage } from \"./pages/DataProtectionPage\";\nimport { UploadPage } from \"./pages/UploadPage\";\nimport { QuestionPage } from \"./pages/QuestionPage\";\nimport { UsabilityEvaluationPage } from \"./pages/UsabilityEvaluationPage\";\nimport { EVALUATION_QUESTIONS } from \"../utils/constants\";\nimport { Report } from \"powerbi-client\";\nimport { provenance } from \"../provenance/Provectories\";\nimport { ICurrentQuestion, IProvenanceQuestion } from \"../utils/interfaces\";\nimport _ from \"lodash\";\nimport { ProcedurePage } from \"./pages/ProcedurePage\";\nimport { OnboardingPage } from \"./pages/OnboardingPage\";\n\nconst USER: string = uuid();\n\nexport function Survey() {\n\tconst [age, setAge] = React.useState<number>(0);\n\tconst [error, setError] = React.useState<string[]>([]);\n\tconst [gender, setGender] = React.useState<string>('')\n\tconst [embedUrl, setEmbedUrl] = React.useState<string>('');\n\tconst [confidence, setConfidence] = React.useState<number>(-1);\n\tconst [pageNumber, setPageNumber] = React.useState<number>(1);\n\tconst [satisfaction, setSatisfaction] = React.useState<number>(-1);\n\tconst [showNextButton, setShowNextButton] = React.useState<boolean>(false);\n\tconst [currentQuestion, setCurrentQuestion] = React.useState<ICurrentQuestion | null>(null);\n\tconst [disableNextButton, setDisableNExtButton] = React.useState<boolean>(false);\n\tconst [powerBIExperience, setPowerBIExperience] = React.useState<number>(-1);\n\tconst [dashboardExperience, setDashboardExperience] = React.useState<number>(-1);\n\tconst questionProvanencesRef = React.useRef<IProvenanceQuestion[]>([]);\n\tconst accessTokenRef = React.useRef<string>('');\n\tconst reportRef = React.useRef<Report>();\n\n\t// adjust when adding page before question pages\n\tconst questionNumber = pageNumber - 4;\n\n\tconst onNextPageButtonClick = async () => {\n\t\tsetDisableNExtButton(true);\n\t\t// only set in question pages\n\t\tif (currentQuestion) {\n\t\t\t// wait for background async provenance track calls to be finished\n\t\t\tawait new Promise((resolve) => {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tquestionProvanencesRef.current.push({\n\t\t\t\t\t\t...(_.omit(currentQuestion, ['answerPossibilities', 'question'])),\n\t\t\t\t\t\tprovenance: _.cloneDeep(provenance),\n\t\t\t\t\t\tendtime: new Date().getTime()\n\t\t\t\t\t});\n\t\t\t\t\tresolve(-1);\n\t\t\t\t}, 1500);\n\t\t\t});\n\t\t}\n\t\t// check for values before the question pages and if there is a next question\n\t\tif (\n\t\t\tquestionNumber > -1 &&\n\t\t\tquestionNumber < (EVALUATION_QUESTIONS.length)\n\t\t) {\n\t\t\tsetCurrentQuestion({ ...EVALUATION_QUESTIONS[questionNumber], mentalEffort: -1, selectedAnswer: \"\" });\n\t\t} else { // no next question\n\t\t\tsetCurrentQuestion(null);\n\t\t}\n\t\tsetDisableNExtButton(false);\n\t\tsetShowNextButton(false);\n\t\tsetPageNumber((prevState) => prevState + 1);\n\t};\n\n\tconst currentPage: React.ReactNode = React.useMemo<React.ReactNode>(() => {\n\t\tswitch (pageNumber) {\n\t\t\tcase 1:\n\t\t\t\tsetShowNextButton(true);\n\t\t\t\treturn <ProcedurePage />\n\t\t\tcase 2:\n\t\t\t\treturn <DataProtectionPage setShowNextButton={setShowNextButton} />;\n\t\t\tcase 3:\n\t\t\t\treturn <DemographicsPage\n\t\t\t\t\tage={age}\n\t\t\t\t\tgender={gender}\n\t\t\t\t\tconfidence={confidence}\n\t\t\t\t\tpoweBIExperience={powerBIExperience}\n\t\t\t\t\tdashboardExperience={dashboardExperience}\n\t\t\t\t\tsetDashboardExperience={setDashboardExperience}\n\t\t\t\t\tsetPowerBIExperience={setPowerBIExperience}\n\t\t\t\t\tsetShowNextButton={setShowNextButton}\n\t\t\t\t\tsetConfidence={setConfidence}\n\t\t\t\t\tsetGender={setGender}\n\t\t\t\t\tsetAge={setAge}\n\t\t\t\t/>;\n\t\t\tcase 4:\n\t\t\t\tsetShowNextButton(true);\n\t\t\t\treturn <OnboardingPage />\n\t\t\tcase 5: case 6: case 7: case 8: case 9: case 10: case 11: case 12:\n\t\t\t\treturn currentQuestion ?\n\t\t\t\t\t<QuestionPage\n\t\t\t\t\t\terror={error}\n\t\t\t\t\t\tembedUrl={embedUrl}\n\t\t\t\t\t\treportRef={reportRef}\n\t\t\t\t\t\taccessTokenRef={accessTokenRef}\n\t\t\t\t\t\tcurrentQuestion={currentQuestion}\n\t\t\t\t\t\tsetCurrentQuestion={setCurrentQuestion}\n\t\t\t\t\t\tsetShowNextButton={setShowNextButton}\n\t\t\t\t\t/> : <p>Invalid question number</p>;\n\t\t\tcase 13:\n\t\t\t\treturn <UsabilityEvaluationPage\n\t\t\t\t\tsatisfaction={satisfaction}\n\t\t\t\t\tsetSatisfaction={setSatisfaction}\n\t\t\t\t\tsetShowNextButton={setShowNextButton}\n\t\t\t\t/>;\n\t\t\tcase 14:\n\t\t\t\treturn <UploadPage\n\t\t\t\t\tage={age}\n\t\t\t\t\tuser={USER}\n\t\t\t\t\tgender={gender}\n\t\t\t\t\tconfidence={confidence}\n\t\t\t\t\tsatisfaction={satisfaction}\n\t\t\t\t\tpowerBIExperience={powerBIExperience}\n\t\t\t\t\tdashboardExperience={dashboardExperience}\n\t\t\t\t\tquestionProvanencesRef={questionProvanencesRef}\n\t\t\t\t/>\n\t\t\tdefault:\n\t\t\t\treturn <p>Invalid page number!</p>\n\t\t}\n\t}, [\n\t\tage,\n\t\terror,\n\t\tgender,\n\t\tembedUrl,\n\t\tconfidence,\n\t\tpageNumber,\n\t\tsatisfaction,\n\t\tcurrentQuestion,\n\t\tpowerBIExperience,\n\t\tdashboardExperience,\n\t\tsetDashboardExperience,\n\t\tsetPowerBIExperience,\n\t\tsetCurrentQuestion,\n\t\tsetShowNextButton,\n\t\tsetSatisfaction,\n\t\tsetConfidence,\n\t\tsetGender,\n\t\tsetAge,\n\t]);\n\n\t// Power BI REST API call to get the embed URL of the report\n\tconst getembedUrl = React.useCallback(() => {\n\t\tfetch(\"https://api.powerbi.com/v1.0/myorg/groups/\" + config.workspaceId + \"/reports/\" + config.reportId, {\n\t\t\theaders: {\n\t\t\t\t\"Authorization\": \"Bearer \" + accessTokenRef.current\n\t\t\t},\n\t\t\tmethod: \"GET\"\n\t\t})\n\t\t\t.then(function (response) {\n\t\t\t\tconst errorMessage: string[] = [];\n\t\t\t\terrorMessage.push(\"Error occurred while fetching the embed URL of the report\")\n\t\t\t\terrorMessage.push(\"Request Id: \" + response.headers.get(\"requestId\"));\n\n\t\t\t\tresponse.json()\n\t\t\t\t\t.then((body) => {\n\t\t\t\t\t\t// Successful response\n\t\t\t\t\t\tif (response.ok) {\n\t\t\t\t\t\t\t// setAccessToken(accessToken);\n\t\t\t\t\t\t\tsetEmbedUrl(body[\"embedUrl\"]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// If error message is available\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\terrorMessage.push(\"Error \" + response.status + \": \" + body.error.code);\n\t\t\t\t\t\t\tsetError(errorMessage);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(function () {\n\t\t\t\t\t\terrorMessage.push(\"Error \" + response.status + \":  An error has occurred\");\n\t\t\t\t\t\tsetError(errorMessage);\n\t\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\t// Error in making the API call\n\t\t\t\tsetError(error);\n\t\t\t});\n\t}, [accessTokenRef]);\n\n\tconst authenticate = React.useCallback(() => {\n\t\tconst msalConfig = {\n\t\t\tauth: {\n\t\t\t\tclientId: config.clientId\n\t\t\t}\n\t\t};\n\n\t\tconst loginRequest = {\n\t\t\tscopes: config.scopes\n\t\t};\n\n\t\tconst msalInstance: UserAgentApplication = new UserAgentApplication(msalConfig);\n\n\t\tconst successCallback = (response: AuthResponse) => {\n\n\t\t\tif (response.tokenType === \"id_token\") {\n\t\t\t\tauthenticate();\n\t\t\t} else if (response.tokenType === \"access_token\") {\n\t\t\t\taccessTokenRef.current = response.accessToken;\n\t\t\t\tgetembedUrl();\n\t\t\t} else {\n\t\t\t\tsetError([(\"Token type is: \" + response.tokenType)])\n\t\t\t}\n\t\t}\n\n\t\tconst failCallBack = (error: AuthError) => {\n\t\t\tsetError([\"Redirect error: \" + error]);\n\t\t};\n\n\t\tmsalInstance.handleRedirectCallback(successCallback, failCallBack);\n\n\t\t// check if there is a cached user\n\t\tif (msalInstance.getAccount()) {\n\t\t\t// get access token silently from cached id-token\n\t\t\tmsalInstance.acquireTokenSilent(loginRequest)\n\t\t\t\t.then((response: AuthResponse) => {\n\t\t\t\t\t// get access token from response: response.accessToken\n\t\t\t\t\taccessTokenRef.current = response.accessToken;\n\t\t\t\t\tgetembedUrl();\n\t\t\t\t})\n\t\t\t\t.catch((err: AuthError) => {\n\n\t\t\t\t\t// refresh access token silently from cached id-token\n\t\t\t\t\t// makes the call to handleredirectcallback\n\t\t\t\t\tif (err.name === \"InteractionRequiredAuthError\") {\n\t\t\t\t\t\tmsalInstance.acquireTokenRedirect(loginRequest);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsetError([err.toString()]);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t} else {\n\t\t\t// user is not logged in or cached, you will need to log them in to acquire a token\n\t\t\tmsalInstance.loginRedirect(loginRequest);\n\t\t}\n\t}, [getembedUrl]);\n\n\tReact.useEffect(() => {\n\t\t// User input - null check\n\t\tif (config.workspaceId === \"\" || config.reportId === \"\") {\n\t\t\tsetError([\"Please assign values to workspace Id and report Id in Config.ts file\"]);\n\t\t} else {\n\t\t\t// Authenticate the user and generate the access token\n\t\t\tauthenticate();\n\t\t}\n\t}, [authenticate]);\n\n\treturn (\n\t\t<div className=\"d-flex flex-column\">\n\t\t\t<div >\n\t\t\t\t<h2 id=\"title\" className=\"m-0 p-1\">\n\t\t\t\t\tProvectories: New Hires Example\n\t\t\t\t</h2>\n\t\t\t</div>\n\t\t\t<div className=\"card m-1 overflow-auto\" style={{ height: '88vh' }}>\n\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t{currentPage}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"d-flex justify-content-between mx-1\">\n\t\t\t\t<p className=\"text-muted\">{\n\t\t\t\t\tcurrentQuestion ? `Question ${questionNumber}/${EVALUATION_QUESTIONS.length}` : null\n\t\t\t\t}</p>\n\t\t\t\t{showNextButton ?\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"btn btn-primary\"\n\t\t\t\t\t\tonClick={() => onNextPageButtonClick()}\n\t\t\t\t\t\tdisabled={disableNextButton}\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tstyle={{ width: '12vh' }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{disableNextButton ? 'Loading...' : 'Next'}\n\t\t\t\t\t</button>\n\t\t\t\t\t: null}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React from \"react\";\n\nexport function WelcomeView({ setSurveyView }: { setSurveyView: (surveView: boolean) => void }) {\n    return <div className=\"m-3\">\n        <h2>Welcome to the survey of Provectories</h2>\n        <h4>Provectories</h4>\n        <p>\n            Provectories is an approach for applying a provenance meta-analysis by visualizing a set of interaction provenance.\n            In this case provenance is a possibility to track application states influenced by users' interactions on applications.\n            Provenance data can be used to recall application states at given time for example to allow jumping between states in\n            a running application, share states or, for this research, to get insights on how users interact with a given tool.\n        </p>\n        <p>\n            The goal of this research is to apply the provectories approach on a feature rich application like a dashboard. By analyzing\n            the provenance data we want to find out if this approach can help to get insights of the usability of a given tool and thus\n            find ways to improve the user experience of dashboards based on this insights. Therefore, with this survey, we want to collect\n            interaction provenance data of an example dashboard for further analysis.\n        </p>\n        <h4>How to start</h4>\n        <ol>\n            <li>When you start you will get asked to login with an email address and a password.</li>\n            <li>\n                To provide anonymity and to grant you access to the dashboard <b>you need to\n                    login with our survey user.</b>\n            </li>\n            <li>\n                It could be that you are suggested your own Microsoft user.\n                In this case, you might open the survey in an anoymous browser window to\n                keep the login process short.\n            </li>\n            <li><b>Please use the below provided user credentials for the login.</b></li>\n            <li>Click on the \"Start survey\"-button to begin.</li>\n        </ol>\n        <div className=\"card mt-4\" style={{ width: 320 }}>\n            <div className=\"card-body\">\n                <h4 className=\"mb-1\">Login information:</h4>\n                <p className=\"ms-1\">\n                    Username: <i>survey@provectories.onmicrosoft.com</i><br />\n                    Password: <i>Dashboard22</i>\n                </p>\n                <button\n                    className=\"btn btn-primary\"\n                    onClick={() => setSurveyView(true)}\n                >\n                    Start survey\n                </button>\n            </div>\n        </div>\n        <h4>Please don't forget to upload your result CSV-file in the end - otherwise no results will be saved!</h4>\n    </div>\n}","import * as config from \"./power-bi/Config\";\nimport { UserAgentApplication } from \"msal/lib-commonjs/UserAgentApplication\";\nimport React from \"react\";\nimport { Survey } from \"./survey/Survey\";\nimport { WelcomeView } from \"./survey/WelcomeView\";\n\nexport function App() {\n    const [suveryView, setSurveyView] = React.useState<boolean>(false);\n\n    return <div>\n        {//Go to survey view if no login login is triggered if already logged in redirect\n            suveryView || new UserAgentApplication({ auth: { clientId: config.clientId } }).getAccount() ?\n                <Survey />\n                :\n                <WelcomeView setSurveyView={setSurveyView} />\n        }\n    </div>\n}","// ----------------------------------------------------------------------------\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n// ----------------------------------------------------------------------------\n\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport 'semantic-ui-css/semantic.min.css'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}